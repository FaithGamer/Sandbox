24 mars

- Learned how to comment in order to generate Doxygen documentation.

25 mars

- Spent the day reworking the signal system. 
I discovered that std::function can wrap a call to a member function along with the object to call the function upon.
I learned a bit more about variadic function, and how one can store an undefined amount of arguments with tuple, then call this function
by "opening" the tuple with the help of std::index_sequence
-Started working on worker thread, to send tasks to various thread.

26 mars

- Implemented my own delegate, based on function pointers that can take free function or member function thanks to type-erasing
I spent a lot of time trying to have multiple variadic template class with the goal to give the ability to my delegate to fill only a couple of the requiered
parameters but in vain.
Nevertheless the delegate can now call function either with arguments provided with the delegate constructor, or at the time of the call.
- So now signals use the Delegate instead of std::function, but I still need to find how to make the signals be able to send reference or pointers as SignalType

28 mars

- Started working on the core structure of the engine with both Singletons and Systems.
- Sandbox is now a library, added the Application project to make the testing.
- Wonder if Sandbox should be linked dynamically or statically. A dynamic library with sdl static within would be convenient.
- The goal is to make it as easy as possible to launch a project using the engine.
- I'd like to figure out a way to automatically include all the vendor includes in one folder so the Application just need to have one include folder

29 mars

- The core structure is taking shape through the singleton Systems.
- I decided to go with static linking, I spent time wondering about wich is the best option for convinience of the end user.
It seems that the end user will have to link Sandbox plus additionnals libs that are requiered from SDL due to it's static linkage
but not SDL itself wich is linked in Sandbox.. The most annoying things is the various includes needed, and I haven't found a satisfying workaround yet.
- Push system, and fixed update working

31 mars

- I removed the submodules for the sake of simplicity, i just included stable version of all my dependency in my vendor folder
then i copied all the relevant include in a single folder.
I added box2D and Imgui to the project.

01 april

- I am making progress on the core architecture. Made the window a singleton. Input singleton created.
Worflow will be pushing system then launching the engine, eventually with paramters