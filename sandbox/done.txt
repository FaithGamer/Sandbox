April


10
- Fixed ImGui processing event with io.WanCaptureMouse/Keyboard
- Inputs creation is now only accessible through InputMap, and InputMap creation only through Inputs
- ForEachComponent improved with lambda/free function, and default gameworld

16
-Improved the batch renderer to take custom shader/render target/stencil mode, with batch generated on purpose.

20

-Render layers and Offscreen render layers almost implemented.
Every layer will be drawn if he has been used during a batch. left to do: every offscreen layer should be bound in the appropriate uniform location

may

13

-Renderer2D can render on specific target
-Render layers can take a specific screen space.

september

22

- Vec: to string

24

- InputMap: Event can pass through 


26
-fixed bug with rendering sprite

27
-optimization for non-moving sprite
-fixed: layer works again (one batch was doubled, GetBatchId was laways returning 0, glViewport wasn't used in RdnerTexture->Bind)

28
-implemented a shader for neat pixel art rendering. But it decrease the performances on large amount of entities.
could be nice to use this shader only for static elements, since (fast) moving sprites distortion are less visible.

octobre

1

-Camera Screen To World position
-Entity is now a simple handle, no more pointer

3

- started working on particle

4

- fixed particle position instance
- particle start emitting right away when constructed

6

- particle system independent of entt::registry
- im gui can be enabled/disabled

January 2024

28

- renamed entt_macros.h Components.h
- moved Files.h/cpp in Utils
- moved Components.h/cpp in Utils
- Moved Math.h/cpp in Utils

29

- typedefed std::string -> String
- Vec2 and Vec3 classes
- various math functions

30

- moved render options cpp from include to src
- z sorting solved the problem of semi transparency!
- json single include added into the project
- Serialized wrapper around json with safe get including error message and exception handling
- basic Asset manager and asset wrapper!

31

- Assets manager compile shader
-sprite origin

-added sprite origin
-textureimport settings loading from config
-serializable interface
-textureimportesetting serializable

February

01

- Config renamed Serialized
- Serialized mission best defined
- Serialized now handle writing and loading from disk, and rememeber it's writing and reading path
- Serialized can also be "loaded" from a json.
- pixel per unit is now part of texture import settings
- Asset manager now check the presence and validity of texture settings and create a default one when needed.
- cropping texture with spritesheet
- loading sprite as assets, with appropriate naming
- no double assets possible

02

- changed scalerangeto parameters order
- add Min Max to math
- transforms parenting
- got rid of origin in Transform
- need compute recursive call through transform parents, not tested
- world to screen ratio is now part of the uniform buffer
- basic line renderer, still need width modulation

03

- line renderer can be modified by transform (was harder than expected)
- dirty fix for the children transform "needCOmpute" update, always return true if have parent, need optimization
- transform get worldPosition and GetTransformMatrix are now nice even with parenting

04

- found a way to triangluate complex polygon shape with hole using earcut
- vec2/3f for earcut polygon

05

-included cute_c2 for collisions
-discovered how to properly use geometry shader and draw triangles by "zigzaging"

06

- found line_strip_adjacency drawing mode that enable access for the geometry shader to the previous and next line
- good progress on the line, width is consistent up to 90 degrees angles

07

-line shader take into consideration aspect ratio
-added uniform float array to Shader class

08

- line width is properly working.
- testing box2D for raycasting 

09

- cute header removed
- delta and fixed delta accessible as static variable from class Time
-ForeachEntities: world/all world, lambda/member func
-ForeachComponents: only on free/lambda function
-AddComponentSignal/Remove added directly within the system class
-removed Create/Destroy entity from World
-removed getEntity from world
-added have entity to world
-Added Create entity as static Entity method
-So Entity default constructor no longer create an entity in registry
-tested listen/Stop listen add/remove compoenet
-entity valid tested and works


11

- Bitmask
- custom filters
- fixed transform parenting problem by removing optimization of precomputed position for non modified transform
- parenting entity and destroying children when destroying parent
- good progress on overlap
- good progress on raycast methods and callbacks

12

- Physics::OverlapCircle works
- Body works
- Collider interface works
- Box2D works

13

>Polygon2D
-WireRender
-CollisionDebugRendersystem
-Enable/Disable DrawColliders
>OverlapBody
>Raycast

March

06

-A default world is automatically created with engine init
so OnAddComponent method of system works even before engine::init if they are called from constructor.
-PhysicsSystem OnAddBody
-PhysicsSystem transform body = transform
-Physics::PointInside
-Better identified the rotation physics problem


07

-visualize the actual physics during rotation on each frame (create pixel on the whole space on each frame and make the square rotate)
-fixed rotation

08

>Testing physics queries
-make a body constructor with no layer (this was already the case)
-BodyOverlap tested and works
-RaycastClosest tested and works
-RaycastAll tested and works
-fixed transform Getposition to reflect accurately when having parent
-added GetLocalPosition (GetPosition get World position now)
-Physics queries have all been tested and work

09


-We have three Body object somehow that are being destroyed
-Fixed by using a move constructor on Body

10

-Physics layer
-better include hierarchy
-Started LoveColony project

11

-Transform matrix in the shader is not efficient at all
>Entity child must not be able to have parent as child!

15

- Noise is now a class and seed can be customized

19

- Fixed transform operator= not copying parent

31

- Changed System::OnEvent signature, no longer receive handled by im gui (bc it was wrong)
- added scroll input type to directional input