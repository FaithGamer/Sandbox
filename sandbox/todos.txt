- to create an input, only go through an input map, same for InputMap, create it from Inputs
- push game world: do not push instantly, queue the push
- threaded BatchRendering
- bindings serialization (include cereal in project)
- Scene
- Game World / entity serialization
- Option to set a RenderTarget when using the batchrenderer (for rendering to framebuffer)
- Write a RenderSystem, making use of the batchrenderer, and with option to use shader on individual sprite
this will be related to SpriteRenderComponent
- batching together sprites using the same material

-tween system


-Store world not as pointers ?

-signal on resize window
-create render texture that scale on window size
-check if generateId works as intended
-implement stencilmode
-test renderer
-find name for batchid
-material instead of just shader

-layers that are a set of systems
-define "use imgui" ?
-resource id for shader/stencil/ ->"render mode option batch id" 


-particles: have a container separate from registry with preallocated memory

-multiple worlds is obsoloete since differents entt::registry are in fact bound to the same containers

-add math to pch
-ability to have parent transform
-inline Transform
-have a way to batch and depth test semi transparent pixel	
-> two pass rendering, first opaque fragment discard transparent then